# zsh configuration

# 補完システムの初期化（必須）
autoload -U compinit
compinit
# Enable colors
autoload -Uz colors && colors

# History settings
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history
setopt SHARE_HISTORY
setopt HIST_VERIFY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE

# Directory navigation
setopt AUTO_CD
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS

# Completion
autoload -U compinit && compinit
zstyle ':completion:*:default' menu select=2
# 補完候補をメニュー形式で表示
zstyle ':completion:*' menu select

# 補完候補に説明（ヘルプ）を表示
zstyle ':completion:*:descriptions' format '%F{yellow}%d%f'
# 補完候補を頻度順にソート
zstyle ':completion:*' group-order 'history' 'all-files'
# 補完候補の色を設定
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

# 補完候補のマッチングを大文字小文字を区別しない
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# 補完候補のグループ化
zstyle ':completion:*' group-name ''

# 補完候補の詳細表示
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
# makeコマンドの補完を有効化
zstyle ':completion:*:*:make:*' tag-order 'targets'
# ディレクトリの補完を有効化
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose yes

# 補完候補が多いときにスクロール
bindkey '^I' expand-or-complete

# Go settings
export GOPATH="$HOME/go"
export PATH="$PATH:$GOPATH/bin" 
export PATH="$PATH:$HOME/.cargo/bin" 
export PATH="$PATH:$HOME/.local/share/mise/shims"

# mise (tool version management)
if command -v mise >/dev/null 2>&1; then
    # Trust mise config files silently
    mise trust ~/.mise.toml 2>/dev/null || true
    mise trust 2>/dev/null || true
    eval "$(mise activate zsh)"
fi

# sheldon (plugin manager)
if command -v sheldon >/dev/null 2>&1; then
    eval "$(sheldon source)"
fi

# Starship prompt
if command -v starship >/dev/null 2>&1; then
    eval "$(starship init zsh)"
fi

# zabrze (abbreviation expansion)
if command -v zabrze >/dev/null 2>&1; then
    eval "$(zabrze init --bind-keys)"
fi

# Aliases
# alias ll='ls -la'
# alias la='ls -A'
# alias l='ls -CF'
# alias ..='cd ..'
# alias ...='cd ../..'

# # Git aliases
# alias g='git'
# alias gs='git status'
# alias ga='git add'
# alias gc='git commit'
# alias gp='git push'
# alias gl='git log --oneline'

if command -v gh >/dev/null 2>&1; then
    eval "$(gh completion -s zsh)"
fi

ghcr() {
  gh repo create "$@"
  ghq get "$1"
  code "$(ghq list --full-path -e "$1")"
}

